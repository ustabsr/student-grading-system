<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>